{
  "root": true,
  "extends": [
    "eslint:recommended",
    "plugin:node/recommended",
    "plugin:import/recommended",
    "next/core-web-vitals",
    "plugin:prettier/recommended"
  ],
  "rules": {
    // Without 'modules' ignored would get 'Import and export declarations are
    // not supported yet' error in all ts files
    "node/no-unsupported-features/es-syntax": [
      "error",
      { "ignores": ["modules"] }
    ],

    // No React component definitions allowed inside components
    "react/no-unstable-nested-components": "warn",

    // Additional import rules
    "import/no-dynamic-require": "error",
    "import/no-absolute-path": "error",
    "import/no-useless-path-segments": "warn",
    "import/newline-after-import": "warn",

    // Use warn instead of error for prettier issues and some other rules
    "prettier/prettier": "warn",
    "no-unused-vars": "warn",
    "prefer-const": "warn",
    "no-debugger": "warn",
    "no-console": "off"
  },
  "overrides": [
    {
      "files": ["**/*.ts?(x)"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json",
        "sourceType": "module",
        "ecmaFeatures": { "jsx": true }
      },
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/typescript"
      ],
      "rules": {
        // 'tsc' already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/291)
        "no-dupe-class-members": "off",
        // 'tsc' already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/477)
        "no-undef": "off",

        // Handled by import/typescript
        "node/no-missing-import": "off",

        // Disable some rules which are difficult for beginners
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-call": "off",

        // Use warn instead of error for some rules
        "prefer-const": "warn",
        "@typescript-eslint/restrict-plus-operands": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/require-await": "warn"
      }
    }
  ]
}
